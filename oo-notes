Verify connection by doing "get user"
    - store user.id, user.full-name, user.default-org-id, user.derfault-project-id
    - don't store these details - you get them as a product of connection verification anyway
    - Connection object has
        + user-id
        + user-full-name
        + default-org-id
        + default-org-name
        + default-project-id (maybe empty)
        + current-project-id 
        + current-device-id 

The default organization comes with /user.  If don't have a default project,
then we can get /projects using the org-id

Rules for translation of packet API documentation to method calls on object
    - Where there is one component for the endpoint
        => Call on the connection object directly

        Packet API:  GET /user
        Cannonical: $con.GET-user
        Alternate:  $con.get-user
        Packet API: 
        Cannonical: 
        Alternate: 

    - Where there is two components for the endpoint and the second
      component is a field/ID;
        => Use the ID as a positional parameter
        => If the first component is a plural, the friendlier alternative uses the singular

        Packet API: GET /devices/{id}    - retrieve a device
        Cannonical: $con.GET-devices(id)
        Alternate:  $con.get-device(id)

        Packet API: PUT /devices/{id}   - update a device
        Cannonical: $con.PUT-devices(id)
        Alternate:  $con.update-device(id)

    - Where there are three components for the endpoint and the second
      component is a field/ID;
        => Use the first component as the method call on the connection object
        => Use the ID as a positional parameter to that method call
        => If the first component is a plural, the friendlier alternative uses the singular

        Packet API: GET /projects/{id}/devices    - retrieve all devices of a project
        Cannonical: $con.projects(id).GET-devices
        Alternate:  $con.project(id).get-devices

        Packet API: POST /projects/{id}/devices   - create a device
        Cannonical: $con.projects(id).POST-devices
        Alternate:  $con.project(id).create-device

List of the API calls implemented and their alternates
    Simple retrieval of information (all must have no params passed)
    .GET-user                       .get-user
    .GET-organizations              .get-orgs
    .GET-projects                   .get-projects                   Array of all projects user is a memmber of
    .GET-facilities                 .get-facilities
    .GET-plans                      .get-plans
    .GET-market-spot-prices         .get-spot-prices

    Organization    (only the "default organization" as defined by packet.net at this time)
    .organizations(id).GET-projects .org(id).get-projects           Array of project information
    .organizations(id).POST-projects .org(id).create-project        Create a project for org

    Projects (all id parameters are optional - defaults to .current-project
    .projects(id).GET-events        .project(id).get-events         Array of project events
    .projects(id).GET-devices       .project(id).get-devices        Array of all devices of a project
    .projects(id).POST-devices      .project(id).create-device      Create a device and return details
    .POST-projects                  .create-project                 Create a new project for default org
    .GET-projects(id)               .get-project(id)                Retrieve info on a particular project
    .PUT-projects(id)               .update-project(id)             Update project details
    .DELETE-projects(id)            .delete-project(id)             Delete a project
    
    devices (all id parameters are optional - defaults to .current-device
    .devices(id).GET-events         .device(id).get-events          Array of device events
    .GET-projects(id)               .get-project(id)                Retrieve info on a particular project

    .POST-devices                   .create-device                  Create a new device for default org
    .GET-devices(id)                .get-device(id)                 Retrieve info on a particular device
    .PUT-devices(id)                .update-device(id)              Update device details
    .DELETE-devices(id)             .delete-device(id)              Delete a device
    
